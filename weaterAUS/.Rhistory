plot(cars)
weatherAUS <- read.csv("C:/Users/halil ibrahim kaya/Downloads/BölümKodlarıVeVeriSetleri/VeriSetleri/weatherAUS.csv", stringsAsFactors=TRUE)
View(weatherAUS)
plot(WeaterAUS)
plot(weaterAUS)
plot(weatherAUS$Temp3pm)
plot(weatherAUS$Temp3pm)
read.csv("\weaterAUS.csv")
read.csv("\weaterAUS.csv")
plot(weatherAUS$Temp3pm)
par(mfrow=c(2,1))
plot(weatherAUS$Temp3pm)
plot(weatherAUS$Temp9am)
par(mfrow=c(2,1))
plot(weatherAUS$Temp3pm)
plot(weatherAUS$Temp3pm)
plot(weatherAUS$Temp9am)
par(mfrow=c(2,1))
plot(weatherAUS$Temp3pm)
plot(weatherAUS$Temp3pm)
plot(weatherAUS$Temp9am)
which(is.na(AlburyWeather))
# Sadece tek bir konum icin analiz yapalim
AlburyWeather <- weatherAUS %>% filter(Location=="Albury")
# dplyr paketini aktif hale getirelim
library(tidyverse)
# Sadece tek bir konum icin analiz yapalim
AlburyWeather <- weatherAUS %>% filter(Location=="Albury")
# Analiz ve tahmin icin gerekli verilerimizi seciyoruz
AlburyWeather <- AlburyWeather %>% select(MinTemp,MaxTemp,Rainfall,WindSpeed3pm,Humidity3pm,Pressure3pm,Temp3pm)
AlburyWeather
# Eksik veri kontrolu yapalim
library(mice)
md.pattern(AlburyWeather)
which(is.na(AlburyWeather))
#Birinci Yontem
index <- which(is.na(AlburyWeather))
AlburyWeather[-index,]
# Ikinci Yontem
na.omit(AlburyWeather)
# Ikinci Yontem
na.omit(AlburyWeather)
# Sadece tek bir konum icin analiz yapalim
AlburyWeather <- weatherAUS %>% filter(Location=="Albury")
# dplyr paketini aktif hale getirelim
library(tidyverse)
# Sadece tek bir konum icin analiz yapalim
AlburyWeather <- weatherAUS %>% filter(Location=="Albury")
# Analiz ve tahmin icin gerekli verilerimizi seciyoruz
AlburyWeather <- AlburyWeather %>% select(Temp3pm,MinTemp,MaxTemp,Rainfall,WindSpeed3pm,Humidity3pm,Pressure3pm,Date)
AlburyWeather
# Eksik veri kontrolu yapalim
library(mice)
# Eksik veri kontrolu yapalim
library(mice)
md.pattern(AlburyWeather)
which(is.na(AlburyWeather))
# Ikinci Yontem
na.omit(AlburyWeather)
# Bu yontemi kullanarak NA iceren tum satiri atiyoruz. Bu yontemi kullanalim
AlburyWeather <- na.omit(AlburyWeather)
AlburyWeather
AlburyWeather$Year <- format(as.Date(AlburyWeather$Date, format="%Y-%m-%d"), "%Y")
# Veri setimizdeki tarih bolumune ek olarak Yil bolumu olusturduk
years <- unique(AlburyWeather$Year)
# Her bir yili tekil olarak ayarladik
colors <- rainbow(length(years))
# Her tekil yila renk atamasi yaptik
AlburyWeather$Color <- colors[as.factor(AlburyWeather$Year)]
# faktorlere gore renk atamasi yaptik
AlburyWeather$Date <- as.Date(AlburyWeather$Date, format="%Y-%m-%d")
# tarih degiskenimi date'e donusturme islemini gerceklestirdim
plot(y=AlburyWeather$Temp3pm,x=AlburyWeather$Date, main =  "Tarihlere Gore Hava Durumu",
ylab = "Hava Sicakligi(Saat 3)",xlab = "Tarih",col = AlburyWeather$Color, pch = 19)
plot(y=AlburyWeather$Temp3pm,x=AlburyWeather$Year, main =  "Tarihlere Gore Hava Durumu",
ylab = "Hava Sicakligi(Saat 3)",xlab = "Tarih",col = AlburyWeather$Color, pch = 19)
library(GGally)
# Albury sehrine ait verileri aciklayici olarak gorsellestiren bir fonksiyonumuz:
ggpairs(AlburyWeather,columns = 1:7)
plot.new()
plot(AlburyWeather$MaxTemp~AlburyWeather$MinTemp,col = AlburyWeather$Color, pch = 19,
xlab = "Minimum Sicaklık", ylab = "Maksimum Sickalik", main ="Sicaklik Karsilastirma Grafigi")
plot(AlburyWeather$Temp3pm~AlburyWeather$Rainfall,col = AlburyWeather$Color, pch = 19,
xlab = "Rainfall", ylab = "Sicaklik (saat3)", main ="Sicaklik Karsilastirma Grafigi")
library(tidyverse)
rainVStemp3 <- AlburyWeather %>% select(Rainfall,MinTemp,Year,Color) %>% filter(Rainfall<60)
plot(rainVStemp3$MinTemp~rainVStemp3$Rainfall,col = AlburyWeather$Color, pch = 19,
xlab = "Rainfall", ylab = "Sicaklik (saat3)", main ="Sicaklik/Yagis Miktari Grafigi")
library(gifski)
library(ggplot2)
library(gganimate)
p <- ggplot(AlburyWeather, aes(x = as.Date(Date), y = MaxTemp, color = Year)) +
geom_line() +
theme_minimal() +
labs(title = "Yillara Göre Maksimum Sicaklik", x = "Tarih", y = "Maksimum Sicaklik")
animated_plot <- p + transition_time(as.numeric(Year)) +
labs(title = 'Yıl: {frame_time}')
anim_save("max_temp_animation.gif", animation = animated_plot)
AlburyWeather$Year <- format(as.Date(AlburyWeather$Date), "%Y")
AlburyWeather$Month <- format(as.Date(AlburyWeather$Date), "%m")
AlburyWeather$YearMonth <- format(as.Date(AlburyWeather$Date), "%Y-%m")
# aylara gore olan degisimin de grafiklerini hareketli hazirlamak icin bu sekilde ayirma islemleri gerceklestirdim.
pAy <- ggplot(AlburyWeather, aes(x = Date, y = MaxTemp, color = YearMonth)) +
geom_line() +
theme_minimal() +
labs(title = "Aylara Göre Maksimum Sıcaklık", x = "Tarih", y = "Maksimum Sıcaklık",
theme(
legend.position = "right",
legend.text = element_text(size = 8),
legend.title = element_text(size = 10),
legend.key.size = unit(0.5, "cm")))
animated_plotAy <- pAy + transition_time(as.numeric(factor(YearMonth)))
anim_save("max_temp_animation_by_month.gif", animation = animated_plotAy)
head(AlburyWeather)
View(AlburyWeather)
plot(Humidity~MaxTemp, data = AlburyWeather)
View(AlburyWeather)
plot(Humidity3pm~Temp3pm, data = AlburyWeather)
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19)
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19,
xlab="Sicaklik(Saat 3"), ylab = "Nem Orani"
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19,
xlab="Sicaklik(Saat 3.)", ylab = "Nem Orani")
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19,
xlab="Sicaklik(Saat 3.)", ylab = "Nem Orani", main = "Sicaklik/Nem karsilastirmasi")
# saat 3 oldugunda sicaklik ve nem orani ne sekilde degisiklik gosterir bunu grafigini cizip bu sekilde yorumluyoruz
abline(lm(Humidity3pm~Temp3pm,data = AlburyWeather))
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19,
xlab="Sicaklik(Saat 3.)", ylab = "Nem Orani", main = "Sicaklik/Nem karsilastirmasi")
# saat 3 oldugunda sicaklik ve nem orani ne sekilde degisiklik gosterir bunu grafigini cizip bu sekilde yorumluyoruz
abline(lm(Humidity3pm~Temp3pm,data = AlburyWeather))
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19,
xlab="Sicaklik(Saat 3.)", ylab = "Nem Orani", main = "Sicaklik/Nem karsilastirmasi")
# saat 3 oldugunda sicaklik ve nem orani ne sekilde degisiklik gosterir bunu grafigini cizip bu sekilde yorumluyoruz
abline(lm(Humidity3pm~Temp3pm,data = AlburyWeather))
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19,
xlab="Sicaklik(Saat 3.)", ylab = "Nem Orani", main = "Sicaklik/Nem karsilastirmasi",
abline(lm(Humidity3pm~Temp3pm,data = AlburyWeather)))
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19,
xlab="Sicaklik(Saat 3.)", ylab = "Nem Orani", main = "Sicaklik/Nem karsilastirmasi",
abline(lm(Humidity3pm~Temp3pm,data = AlburyWeather)))
plot.new()
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19,
xlab="Sicaklik(Saat 3.)", ylab = "Nem Orani", main = "Sicaklik/Nem karsilastirmasi",
abline(lm(Humidity3pm~Temp3pm,data = AlburyWeather)))
# saat 3 oldugunda sicaklik ve nem orani ne sekilde degisiklik gosterir bunu grafigini cizip bu sekilde yorumluyoruz
abline(lm(Humidity3pm~Temp3pm,data = AlburyWeather))
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19,
xlab="Sicaklik(Saat 3.)", ylab = "Nem Orani", main = "Sicaklik/Nem karsilastirmasi")
# saat 3 oldugunda sicaklik ve nem orani ne sekilde degisiklik gosterir bunu grafigini cizip bu sekilde yorumluyoruz
abline(lm(Humidity3pm~Temp3pm,data = AlburyWeather))
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19,
xlab="Sicaklik(Saat 3.)", ylab = "Nem Orani", main = "Sicaklik/Nem karsilastirmasi")
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19,
xlab="Sicaklik(Saat 3.)", ylab = "Nem Orani", main = "Sicaklik/Nem karsilastirmasi",new = T)
# saat 3 oldugunda sicaklik ve nem orani ne sekilde degisiklik gosterir bunu grafigini cizip bu sekilde yorumluyoruz
abline(lm(Humidity3pm~Temp3pm,data = AlburyWeather))
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19,
xlab="Sicaklik(Saat 3.)", ylab = "Nem Orani", main = "Sicaklik/Nem karsilastirmasi",new = T)
plot(Humidity3pm~Temp3pm, data = AlburyWeather,col = AlburyWeather$Color, pch = 19,
xlab="Sicaklik(Saat 3.)", ylab = "Nem Orani", main = "Sicaklik/Nem karsilastirmasi")
# Scatter plot ve regresyon doğrusunu içeren grafik
tempHumi <- ggplot(AlburyWeather, aes(x = Temp3pm, y = Humidity3pm, color = Color)) +
geom_point(size = 3) +  # Noktaları gösterir
geom_smooth(method = "lm", color = "black", linetype = "dashed") +  # Regresyon doğrusunu ekler
labs(
x = "Sıcaklık (Saat 3.)",
y = "Nem Oranı",
title = "Sıcaklık/Nem Karşılaştırması"
) +
theme_minimal()  # Temayı sadeleştirir
# Grafiği göster
print(tempHumi)
MinMaxTemp <- ggplot(AlburyWeather, aes(x = MinTemp, y = MaxTemp, color = Color)) +
geom_point(size = 3) +
geom_smooth(method = "lm", color = "black", linetype = "dashed") +
labs(
x = "Minimum Sicaklik",
y = "Maksimum Sicaklik",
title = "Sicaklik Karsilastirma Grafigi"
) +
theme_minimal()
print(MinMaxTemp)
MinMaxTemp <- ggplot(AlburyWeather, aes(x = MinTemp, y = MaxTemp, color = years)) +
geom_point(size = 3) +
geom_smooth(method = "lm", color = "black", linetype = "dashed") +
labs(
x = "Minimum Sicaklik",
y = "Maksimum Sicaklik",
title = "Sicaklik Karsilastirma Grafigi"
) +
theme_minimal()
print(MinMaxTemp)
MinMaxTemp <- ggplot(AlburyWeather, aes(x = MinTemp, y = MaxTemp, color = Color)) +
geom_point(size = 3) +
geom_smooth(method = "lm", color = "black", linetype = "dashed") +
labs(
x = "Minimum Sicaklik",
y = "Maksimum Sicaklik",
title = "Sicaklik Karsilastirma Grafigi"
) +
theme_minimal()
print(MinMaxTemp)
View(AlburyWeather)
MinMaxTemp <- ggplot(AlburyWeather, aes(x = MinTemp, y = MaxTemp, color = Year)) +
geom_point(size = 3) +
geom_smooth(method = "lm", color = "black", linetype = "dashed") +
labs(
x = "Minimum Sicaklik",
y = "Maksimum Sicaklik",
title = "Sicaklik Karsilastirma Grafigi"
) +
theme_minimal()
print(MinMaxTemp)
tempHumi <- ggplot(AlburyWeather, aes(x = Temp3pm, y = Humidity3pm, color = Year)) +
geom_point(size = 3) +  # Noktaları gösterir
geom_smooth(method = "lm", color = "black", linetype = "dashed") +  # Regresyon doğrusunu ekler
labs(
x = "Sıcaklık (Saat 3.)",
y = "Nem Oranı",
title = "Sıcaklık/Nem Karşılaştırması"
) +
theme_minimal()  # Temayı sadeleştirir
print(tempHumi)
havadurumu <- gplot(AlburyWeather, aes(x = Date, y = Temp3pm, color = Year)) +
geom_point(size = 3) +
labs(
title = "Tarihlere Gore Hava Durumu",
x = "Tarih",
y = "Hava Sicakligi (Saat 3)"
) + theme_minimal() +
theme(
legend.title = element_blank(),
legend.text = element_text(size = 8),
legend.key.size = unit(0.5, "cm")
)
havadurumu <- ggplot(AlburyWeather, aes(x = Date, y = Temp3pm, color = Year)) +
geom_point(size = 3) +
labs(
title = "Tarihlere Gore Hava Durumu",
x = "Tarih",
y = "Hava Sicakligi (Saat 3)"
) + theme_minimal() +
theme(
legend.title = element_blank(),
legend.text = element_text(size = 8),
legend.key.size = unit(0.5, "cm")
)
print(havadurumu)
View(AlburyWeather)
library(tidyverse)
AlburyWeather %>% group_by(YearMonth) %>% summarise(shapiro.test(Temp3pm)$p.value)
tempHumi <- ggplot(AlburyWeather, aes(x = Temp3pm, y = Humidity3pm, color = Year)) +
geom_point(size = 3) +  # Noktaları gösterir
geom_smooth(method = "lm", color = "black", linetype = "dashed") +  # Regresyon doğrusunu ekler
labs(
x = "Sıcaklık (Saat 3.)",
y = "Nem Oranı",
title = "Sicaklik/Nem Karsilastirmasi"
) +
theme_minimal()  # Temayı sadeleştirir
print(tempHumi)
tempHumi <- ggplot(AlburyWeather, aes(x = Temp3pm, y = Humidity3pm, color = Year)) +
geom_point(size = 3) +  # Noktaları gösterir
geom_smooth(method = "lm", color = "black", linetype = "dashed") +  # Regresyon doğrusunu ekler
labs(
x = "Sicaklik (Saat 3)",
y = "Nem Orani",
title = "Sicaklik/Nem Karsilastirmasi"
) +
theme_minimal()  # Temayı sadeleştirir
print(tempHumi)
library(caret)
AlburyWeather %>% group_by(YearMonth) %>% summarise(dw.test(Temp3pm)$p.value)
library(BSDA)
library(car)
AlburyWeather %>% group_by(YearMonth) %>% summarise(durbinWatsonTest(Temp3pm)$p.value)
AlburyWeather %>% group_by(YearMonth) %>% summarise(durbinWatsonTest(lm(Temp3pm~YearMonth))$p.value)
AlburyWeather %>% group_by(YearMonth) %>% summarise(leveneTest(Temp3pm)$p.value)
AlburyWeather %>% group_by(YearMonth) %>% summarise(leveneTest(Temp3pm,group = YearMonth)$p.value)
AlburyWeather %>% group_by(YearMonth) %>% summarise(leveneTest(Temp3pm~YearMonth)$p.value)
AlburyWeather %>% group_by(YearMonth) %>% summarise(bartlett.test(Temp3pm~YearMonth)$p.value)
bartlett.test(AlburyWeather$Temp3pm~AlburyWeather$YearMonth)
durbinWatsonTest(AlburyWeather$Temp3pm~AlburyWeather$YearMonth)
durbinWatsonTest(lm(AlburyWeather$Temp3pm~AlburyWeather$YearMonth))
AlburyWeather$Temp3pm[AlburyWeather$Year==2008]
View(AlburyWeather)
t.test(AlburyWeather$Temp3pm[AlburyWeather$Year==2009],mu = )
AlburyWeather$Temp3pm[AlburyWeather$Year==2009]
t.test(AlburyWeather$Temp3pm[AlburyWeather$Year==2009],mu = 20,alternative = "two.sided",conf.level = 0.95)
t.test(AlburyWeather$Temp3pm[AlburyWeather$Year==2009],mu = 20,alternative = "two.sided",conf.level = 0.95)
t.test(AlburyWeather$Temp3pm[AlburyWeather$Year==2009],mu = 20,alternative = "two.sided",conf.level = 0.95)
# H0: 2009 yilindaki hava sicakliklarinin ortalama degeri 20'dir
# Ha: 2009 yilindaki hava sicakliklarinin ortalama degeri 20 degildir
# yillara gore sicaklik degerlerinin ortalamasini karsilastirmak icin onden bir alistirma yaptik
# verilerimiz normallik gosterdigi icin t.test kullandik ancak iki degiskenli istatistik analizi icin
# varyans homojenliklerini de kontrol etmemiz gerekecek.
# p degerigimiz 0.05den kucuk geldigi icin %95 dogruluk oraninda 2009 yilina ait saat 3 sicaklik degerimizin ortalama degeri
# 20'ye esit degildir diyoruz.
View(AlburyWeather)
bartlett.test(Temp3pm~Year, data = AlburyWeather)
bartlett.test(Temp3pm~YearMonth, data = AlburyWeather)
bartlett.test(Temp3pm~Month, data = AlburyWeather)
bartlett.test(Temp3pm~YearMonth, data = AlburyWeather)
bartlett.test(Temp3pm~Year, data = AlburyWeather)
bartlett.test(Temp3pm~Year, data = AlburyWeather[Year=c(2009,2010)])
bartlett.test(Temp3pm~Year, data = AlburyWeather[Year==c(2009,2010)])
bartlett.test(Temp3pm~Year, data = AlburyWeather[AlburyWeather$Year==c(2009,2010)])
AlburyWeather[AlburyWeather$Year==c(2009,2010)]
View(AlburyWeather)
bartlett.test(Temp3pm~Year, data = AlburyWeather[AlburyWeather$Year==c("2009","2010")])
AlburyWeather[AlburyWeather$Year==2009]
AlburyWeather[,AlburyWeather$Year==2009]
AlburyWeather[AlburyWeather$Year==2009,]
bartlett.test(Temp3pm~Year, data = AlburyWeather[AlburyWeather$Year==c("2009","2010")],)
bartlett.test(Temp3pm~Year, data = AlburyWeather[AlburyWeather$Year==c(2009,2010)],)
bartlett.test(Temp3pm~Year, data = AlburyWeather[AlburyWeather$Year==c(2009,2010),])
AlburyWeather[AlburyWeather$Year==2009,]
yil9 <- AlburyWeather[AlburyWeather$Year==2009,]
yil10 <- AlburyWeather[AlburyWeather$Year==2010,]
t.test(x = yil9 ,y = yil10, alternative = "two.sided")
t.test(x = yil9$Temp3pm ,y = yil10$Temp3pm, alternative = "two.sided")
yil11 <- AlburyWeather[AlburyWeather$Year==2011,]
yil12 <- AlburyWeather[AlburyWeather$Year==2012,]
bartlett.test(Temp3pm~Year, data = AlburyWeather[AlburyWeather$Year==c(2010,2011),])
bartlett.test(Temp3pm~Year, data = AlburyWeather[AlburyWeather$Year==c(2011,2012),])
t.test(x = yil11$Temp3pm, y = yil12$Temp3pm, alternative = "two.sided",var.equal = T)
t.test(x = yil11$Temp3pm, y = yil12$Temp3pm, alternative = "two.sided",var.equal = F)
t.test(x = yil11$Temp3pm, y = yil12$Temp3pm, alternative = "two.sided")
anova_result <- aov(Temp3pm ~ Year, data = AlburyWeather)
summary(anova_result)
TukeyHSD(anova_result)
# elimizdeki 2008 veri sayisi az oldugundan anova testi oncesi onu cikaralim
AlburyWeather[AlburyWeather$Year==2008,]
# elimizdeki 2008 veri sayisi az oldugundan anova testi oncesi onu cikaralim
AlburyWeather[-AlburyWeather$Year==2008,]
# elimizdeki 2008 veri sayisi az oldugundan anova testi oncesi onu cikaralim
AlburyWeather[AlburyWeather$Year==2008,]
# elimizdeki 2008 veri sayisi az oldugundan anova testi oncesi onu cikaralim
which(AlburyWeather[AlburyWeather$Year==2008,])
# elimizdeki 2008 veri sayisi az oldugundan anova testi oncesi onu cikaralim
AlburyWeather["Year"==2008,]
# elimizdeki 2008 veri sayisi az oldugundan anova testi oncesi onu cikaralim
AlburyWeather["Year"==2008,]
# elimizdeki 2008 veri sayisi az oldugundan anova testi oncesi onu cikaralim
AlburyWeather[2008,]
# elimizdeki 2008 veri sayisi az oldugundan anova testi oncesi onu cikaralim
library(tidyverse)
AlburyWeather %>% filter(Year!=2008)
alb <- AlburyWeather %>% filter(Year!=2008)
anova_result <- aov(Temp3pm ~ Year, data = alb)
summary(anova_result)
TukeyHSD(anova_result)
t.test(x = yil12$Temp3pm, y = yil11$Temp3pm, alternative = "two.sided")
t.test(x = yil11$Temp3pm, y = yil12$Temp3pm, alternative = "two.sided")
AlburyWeather
head(AlburyWeather)
# makina ogrenmesi modeli olusturmak icin hani degiskenleri kullanmam gerektigi konusunda ufak goz gezdirmeler yapiyorum
library(tidyverse)
dataModel <- AlburyWeather %>% select(Temp3pm,MinTemp,MaxTemp,Rainfall,WindSpeed3pm,Humidity3pm)
# bu verileri kullanmaya karar verdim. bu verileri kullanmama karar vermemde yukarida grafigini cizdigim kolerasyon istatistigi yardimci oldu
head(dataModel)
set.seed(125)
ind <- sample(1:nrow(dataModel), size = nrow(dataModel)*0.75)
AlburyWeather[ind,]
# verilerimin %75'ini modelimi egitmek icin %25'ini modelimi test etmek icin kullanacagim
trainSet <- AlburyWeather[ind,]
testSet <- AlburyWeather[-ind,]
# Linear Model
modelLM <- lm(Temp3pm ~ . , data = trainSet)
summary(modelLM)
# verilerimin %75'ini modelimi egitmek icin %25'ini modelimi test etmek icin kullanacagim
trainSet <- dataModel[ind,]
set.seed(125)
ind <- sample(1:nrow(dataModel), size = nrow(dataModel)*0.75)
# verilerimin %75'ini modelimi egitmek icin %25'ini modelimi test etmek icin kullanacagim
trainSet <- dataModel[ind,]
testSet <- dataModel[-ind,]
# Linear Model
modelLM <- lm(Temp3pm ~ . , data = trainSet)
summary(modelLM)
## tahmin islemini gerceklestirelim
tahminLM <- predict(modelLM,testSet)
tahminLM
head(tahminLM)
# modelimizi degerlendirelim
library(caret)
R2(tahminLM,testSet$Temp3pm)
RMSE(tahminLM,testSet$Temp3pm)
MAE(tahminLM,testSet$Temp3pm)
library(earth)
modelMARS <- earth(Temp3am ~ . , data = trainSet, penalty = 2, degree=2, nk=200,
nfold=10, keepxy=T)
modelMARS <- earth(Temp3pm ~ . , data = trainSet, penalty = 2, degree=2, nk=200,
nfold=10, keepxy=T)
summary(modelMARS)
# bu verileri kullanmaya karar verdim. bu verileri kullanmama karar vermemde yukarida grafigini cizdigim kolerasyon istatistigi yardimci oldu
head(dataModel)
summary(modelLM)
head(tahminLM)
R2(tahminLM,testSet$Temp3pm)
RMSE(tahminLM,testSet$Temp3pm)
MAE(tahminLM,testSet$Temp3pm)
summary(modelMARS)
tahminMARS <- predict(modelMARS,testSet)
tahminMARS
head(tahminMARS)
# modelimizi degerlendirelim
library(caret)
R2(tahminMARS,testSet$Temp3pm)
RMSE(tahminMARS,testSet$Temp3pm)
MAE(tahminMARS,testSet$Temp3pm)
